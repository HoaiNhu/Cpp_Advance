#include<iostream>

using namespace std;

int main() {
	int a, b;
	cin >> a >> b;
	cout << (a | b) + (a & b);
	return 0;
}
------------------------------------------------
//Nếu a là một số lẻ thì kết quả của phép a & 1 sẽ bằng 1 (một số lẻ luôn có bit thấp bằng 1).
//số 1 là 0. . .0 0 1
gỉa sử số A là x . . .y z t
a&1 = 0 . . .0 0 t
vì 1&t = t (là 0 hoặc 1) còn 0&k = 0
t là 0 thì là số chẵn còn k thì ngược lại
//Hàm kiểm tra chẵn lẻ
#include<iostream>

using namespace std;

int main() {
	int a;
	cin >> a;
	if (a & 1) {
		cout << "a is an odd number";
	} else {
		cout << "a is an even number";
	}
	return 0;
}
--------------------------------------------------
//Hàm chia lấy nguyên
//ví dụ số hệ 10 thì dịch sang bên phải 1 số hoặc bỏ đi 1 số ở cuối bên phải thì là chia 10
//số hệ 2 cũng thế dịch sang phải 1 số (1bit) là chia 2
#include<iostream>

using namespace std;

int main() {
	int a;
	cin >> a;
	cout << "answer = " << (a >> 1);
	return 0;
}

-------------------------------------------------
- Muốn nhân với 2^n thì dịch sang bên trái n bit.
- Muốn chia với 2^n thì dịch sang bên phải n bit.
VD: Phép tính a*2 <=> a << 1;
Bài này yêu cầu tính 2^n thì lấy 1 làm gốc :v là thành 1*2^n <=> 1 << (n)
dịch 1 sang trái n lần:
VD: n = 2: 0000 0001 -> 0000 0100 = 2^(2) = 4
       n = 3: 0000 0001 -> 0000 1000 = 2^(3) = 8

#include<iostream>

using namespace std;

int main() {
	int n;
	cin >> n;
	cout << (1 << n);
	return 0;
}
--------------------------------------------------
//Hàm đếm bit 1
#include<iostream>

using namespace std;

int main() {
	int a;
    cin >> a;
    int sum = 0;
    while(a != 0)
    {
        if(a & 1)// trả về 1 nếu đúng, 0 nếu sai nha bạn. hiểu 1 cách đơn giản là nếu bit cuối là 1 thì khối lệnh trong if đc thực thi
        {
            sum++;
        }
        a = a >> 1;
    }
    cout<< "answer = " << sum;
	return 0;
}

-----------------------------------------------------------
Muốn lấy ra giá trị tại bit thứ n của số a bạn có thể làm như sau:

cout << (a & (1 << (n - 1)));
Giải thích:

1 << (n - 1); sẽ trả về một số có bit thứ n từ phải qua là 1 và các bit khác là bit 0. Kết quả của phép AND số này với a sẽ trả về một số có giá trị 0 nếu bit thứ n trong a là 0 và trả về một số khác 0 nếu bit thứ n trong a khác 0.

Bạn cũng có thể làm cách khác như sau:

cout << (1 & (a >> (n - 1)));

//Hàm mẫu
#include<iostream>

using namespace std;

int main() {
	int a, n;
    cin >> a >> n;
    if((a & (1 << (n-1))) == 0)
    {
        cout << 0;
    }
    else
    {
        cout << 1;
    }
	return 0;
}

--------------------------------------------------------------
//Hàm đổi bit thứ 4 của a về 0
#include<iostream>

using namespace std;

int main() {
	int a;
    cin >> a;
    a = a & (~(1 << (4-1)));
    cout << a;
	return 0;
}
